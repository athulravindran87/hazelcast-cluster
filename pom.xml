<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.athul</groupId>
    <artifactId>hazelcast-cluster</artifactId>
    <version>0.1-SNAPSHOT</version>
    <name>hazelcast-cluster</name>
    <packaging>pom</packaging>
    <description>Hazelcast Cluster using Eureka Discovery</description>

    <properties>
        <skip.surefire.tests>false</skip.surefire.tests>
        <skip.failsafe.tests>false</skip.failsafe.tests>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <powermock.version>2.0.2</powermock.version>
        <jacoco.version>0.8.1</jacoco.version>
    </properties>


    <modules>
        <module>common-config</module>
        <module>discovery-server</module>
        <module>hazelcast-server</module>
        <module>hazelcast-client</module>
    </modules>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
        </dependency>


        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-eureka-one</artifactId>
        </dependency>

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
        </dependency>


        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>


    </dependencies>


    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-eureka-one</artifactId>
                <version>1.1.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.hazelcast</groupId>
                        <artifactId>hazelcast</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast</artifactId>
                <version>3.12</version>
            </dependency>

            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-client</artifactId>
                <version>3.12</version>
            </dependency>

            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-rules</artifactId>
                <version>1.12.1</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.4.8</version>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>

               <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-project-info-reports-plugin</artifactId>
               </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <exclClassLoaders>sun.reflect.DelegatingClassLoader</exclClassLoaders>
                        <excludes>
                            <exclude>**/model/**/*.class</exclude>
                            <exclude>**/test/**/*.class</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/AllTests.class</include>
                        </includes>
                        <skipTests>${skip.surefire.tests}</skipTests>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <environmentVariables>
                            <SECUIRTY_REGION>none</SECUIRTY_REGION>
                        </environmentVariables>
                        <skipTests>${skip.failsafe.tests}</skipTests>
                        <forkCount>2</forkCount>
                        <reuseForks>false</reuseForks>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>1.4.8</version>
                    <configuration>
                        <targetClasses>
                            <param>com.athul*</param>
                        </targetClasses>
                        <targetTests>
                            <param>com.athul.AllTests</param>
                        </targetTests>
                        <avoidCallsTo>
                            <avoidCallsTo>org.apache.commons.lang3.time</avoidCallsTo>
                            <avoidCallsTo>java.util.logging.Logging</avoidCallsTo>
                            <avoidCallsTo>ch.qos.logback</avoidCallsTo>
                            <avoidCallsTo>org.slf4j</avoidCallsTo>
                            <avoidCallsTo>org.apache.log4j</avoidCallsTo>
                            <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
                        </avoidCallsTo>
                        <failWhenNoMutations>false</failWhenNoMutations>
                        <threads>3</threads>
                        <verbose>false</verbose>
                        <timeoutConstant>10000</timeoutConstant>
                        <outputFormats>
                            <outputFormat>HTML</outputFormat>
                            <outputFormat>XML</outputFormat>
                        </outputFormats>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>false</verbose>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ss2</dateFormat>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                        </generateGitPropertiesFilename>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                    </configuration>
                </plugin>

                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-project-info-reports-plugin</artifactId>
                     <version>3.0.0</version>
                 </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <!--<plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.3.2</version>
                    <executions>
                        <execution>
                            <id>retrieve-config</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <executable>sh</executable>
                        <arguments>
                            <argument>${project.parent.basedir}/token.sh</argument>
                        </arguments>
                    </configuration>
                </plugin>-->

                <!--<plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>4.2.0</version>
                    <configuration>
                        <mode>kubernetes</mode>
                        <forcePull>true</forcePull>
                        <images>
                            <image>
                                <name>gcr.io/hazelcast-cluster/${project.artifactId}</name>
                                <build>
                                    <tags>
                                        <tag>v2</tag>
                                    </tags>
                                    <dockerFile>${project.basedir}/deploy/DockerFile</dockerFile>
                                    <contextDir>${project.basedir}</contextDir>
                                </build>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>resource</goal>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>-->

               <!-- <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.1.7.RELEASE</version>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <systemPropertyVariables>
                            <glcoud.token>$(gcloud auth print-access-token)</glcoud.token>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>-->

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>4.2.0</version>
                    <configuration>
                        <mode>kubernetes</mode>
                        <forcePull>true</forcePull>
                        <images>
                            <image>
                                <name>gcr.io/hazelcast-cluster/${project.artifactId}</name>
                                <build>
                                    <tags>
                                        <tag>v2</tag>
                                    </tags>
                                    <dockerFile>${project.basedir}/deploy/DockerFile</dockerFile>
                                    <contextDir>${project.basedir}</contextDir>
                                </build>
                            </image>
                        </images>
<!--
                        <authConfig>
                            <username>oauth2accesstoken</username>
                            <password>ya29.Gl1mBzzEOx85vjCW4rcl9J1EcKx6ONQ7UejrqBfTTIUd7wS3uQ_8CXLgx3AE1ln4cf3WiFHbNqZs4SpGrZJAW_-k57vD4c5RCq-VwyBxJCTbl-2FH9zGJrG8HFcdGKM</password>
                        </authConfig>
-->
                    </configuration>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>resource</goal>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>pitest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <configuration>
                            <mutationThreshold>90</mutationThreshold>
                            <coverageThreshold>95</coverageThreshold>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>maven-central</id>
            <name>maven central</name>
            <url>http://central.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
</project>